// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "axis.h"

// Dispatch interfaces referenced by this interface
#include "Label.h"
#include "DerivedDouble.h"
#include "DerivedLong.h"
#include "ValueLabelCollection.h"
#include "TimeScale.h"
#include "GridLines.h"
#include "font.h"
#include "ValueFormat.h"
#include "AxisStyle.h"


/////////////////////////////////////////////////////////////////////////////
// CAxis properties

CLabel CAxis::GetTitle()
{
	LPDISPATCH pDispatch;
	GetProperty(0x1, VT_DISPATCH, (void*)&pDispatch);
	return CLabel(pDispatch);
}

CDerivedDouble CAxis::GetOrigin()
{
	LPDISPATCH pDispatch;
	GetProperty(0x2, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedDouble(pDispatch);
}

CDerivedDouble CAxis::GetDataMin()
{
	LPDISPATCH pDispatch;
	GetProperty(0x3, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedDouble(pDispatch);
}

CDerivedDouble CAxis::GetDataMax()
{
	LPDISPATCH pDispatch;
	GetProperty(0x4, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedDouble(pDispatch);
}

CDerivedDouble CAxis::GetMin()
{
	LPDISPATCH pDispatch;
	GetProperty(0x5, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedDouble(pDispatch);
}

CDerivedDouble CAxis::GetMax()
{
	LPDISPATCH pDispatch;
	GetProperty(0x6, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedDouble(pDispatch);
}

CDerivedDouble CAxis::GetNumSpacing()
{
	LPDISPATCH pDispatch;
	GetProperty(0x7, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedDouble(pDispatch);
}

CDerivedDouble CAxis::GetTickSpacing()
{
	LPDISPATCH pDispatch;
	GetProperty(0x8, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedDouble(pDispatch);
}

CDerivedLong CAxis::GetPrecision()
{
	LPDISPATCH pDispatch;
	GetProperty(0x9, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedLong(pDispatch);
}

CValueLabelCollection CAxis::GetValueLabels()
{
	LPDISPATCH pDispatch;
	GetProperty(0xa, VT_DISPATCH, (void*)&pDispatch);
	return CValueLabelCollection(pDispatch);
}

CTimeScale CAxis::GetTimeScale()
{
	LPDISPATCH pDispatch;
	GetProperty(0xb, VT_DISPATCH, (void*)&pDispatch);
	return CTimeScale(pDispatch);
}

CGridLines CAxis::GetMajorGrid()
{
	LPDISPATCH pDispatch;
	GetProperty(0xc, VT_DISPATCH, (void*)&pDispatch);
	return CGridLines(pDispatch);
}

CString CAxis::GetName()
{
	CString result;
	GetProperty(0xd, VT_BSTR, (void*)&result);
	return result;
}

BOOL CAxis::GetIsShowing()
{
	BOOL result;
	GetProperty(0xe, VT_BOOL, (void*)&result);
	return result;
}

void CAxis::SetIsShowing(BOOL propVal)
{
	SetProperty(0xe, VT_BOOL, propVal);
}

BOOL CAxis::GetIsLogarithmic()
{
	BOOL result;
	GetProperty(0xf, VT_BOOL, (void*)&result);
	return result;
}

void CAxis::SetIsLogarithmic(BOOL propVal)
{
	SetProperty(0xf, VT_BOOL, propVal);
}

BOOL CAxis::GetIsReversed()
{
	BOOL result;
	GetProperty(0x10, VT_BOOL, (void*)&result);
	return result;
}

void CAxis::SetIsReversed(BOOL propVal)
{
	SetProperty(0x10, VT_BOOL, propVal);
}

long CAxis::GetTitleRotation()
{
	long result;
	GetProperty(0x11, VT_I4, (void*)&result);
	return result;
}

void CAxis::SetTitleRotation(long propVal)
{
	SetProperty(0x11, VT_I4, propVal);
}

long CAxis::GetAnnotationRotation()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CAxis::SetAnnotationRotation(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

long CAxis::GetAnnotationMethod()
{
	long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CAxis::SetAnnotationMethod(long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

long CAxis::GetAnnotationPlacement()
{
	long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CAxis::SetAnnotationPlacement(long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

long CAxis::GetOriginPlacement()
{
	long result;
	GetProperty(0x15, VT_I4, (void*)&result);
	return result;
}

void CAxis::SetOriginPlacement(long propVal)
{
	SetProperty(0x15, VT_I4, propVal);
}

long CAxis::GetNumMethod()
{
	long result;
	GetProperty(0x16, VT_I4, (void*)&result);
	return result;
}

void CAxis::SetNumMethod(long propVal)
{
	SetProperty(0x16, VT_I4, propVal);
}

double CAxis::GetConstant()
{
	double result;
	GetProperty(0x17, VT_R8, (void*)&result);
	return result;
}

void CAxis::SetConstant(double propVal)
{
	SetProperty(0x17, VT_R8, propVal);
}

double CAxis::GetMultiplier()
{
	double result;
	GetProperty(0x18, VT_R8, (void*)&result);
	return result;
}

void CAxis::SetMultiplier(double propVal)
{
	SetProperty(0x18, VT_R8, propVal);
}

LPDISPATCH CAxis::GetParent()
{
	LPDISPATCH result;
	GetProperty(0x19, VT_DISPATCH, (void*)&result);
	return result;
}

COleFont CAxis::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(0x1a, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CAxis::SetFont(LPDISPATCH propVal)
{
	SetProperty(0x1a, VT_DISPATCH, propVal);
}

double CAxis::GetOriginBase()
{
	double result;
	GetProperty(0x1b, VT_R8, (void*)&result);
	return result;
}

void CAxis::SetOriginBase(double propVal)
{
	SetProperty(0x1b, VT_R8, propVal);
}

CDerivedDouble CAxis::GetAnnotationAngle()
{
	LPDISPATCH pDispatch;
	GetProperty(0x1c, VT_DISPATCH, (void*)&pDispatch);
	return CDerivedDouble(pDispatch);
}

CValueFormat CAxis::GetLabelFormat()
{
	LPDISPATCH pDispatch;
	GetProperty(0x1d, VT_DISPATCH, (void*)&pDispatch);
	return CValueFormat(pDispatch);
}

void CAxis::SetLabelFormat(LPDISPATCH propVal)
{
	SetProperty(0x1d, VT_DISPATCH, propVal);
}

BOOL CAxis::GetIs100Percent()
{
	BOOL result;
	GetProperty(0x1e, VT_BOOL, (void*)&result);
	return result;
}

void CAxis::SetIs100Percent(BOOL propVal)
{
	SetProperty(0x1e, VT_BOOL, propVal);
}

double CAxis::GetAnnotationRotationAngle()
{
	double result;
	GetProperty(0x1f, VT_R8, (void*)&result);
	return result;
}

void CAxis::SetAnnotationRotationAngle(double propVal)
{
	SetProperty(0x1f, VT_R8, propVal);
}

CAxisStyle CAxis::GetAxisStyle()
{
	LPDISPATCH pDispatch;
	GetProperty(0x20, VT_DISPATCH, (void*)&pDispatch);
	return CAxisStyle(pDispatch);
}

/////////////////////////////////////////////////////////////////////////////
// CAxis operations
